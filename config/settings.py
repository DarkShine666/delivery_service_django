"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import sys

from dotenv import load_dotenv

load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ.get("SECRET_KEY")
DEBUG = os.environ.get("DEBUG", "True") == "True"
ALLOWED_HOSTS = ["*"]
CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL")
REDIS_HOST = os.getenv("REDIS_HOST")
REDIS_PORT = int(os.getenv("REDIS_PORT"))

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "drf_spectacular",
    "parcels",
]
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
SPECTACULAR_SETTINGS = {
    "TITLE": "Delivery Service API",
    "DESCRIPTION": "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ üì¶",
    "VERSION": "1.1.1",
    "SERVE_INCLUDE_SCHEMA": False,
}
ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.environ.get("MYSQL_DATABASE", "delivery_db"),
        "USER": os.environ.get("MYSQL_USER", "root"),
        "PASSWORD": os.environ.get("MYSQL_PASSWORD", "rootpass"),
        "HOST": os.environ.get("MYSQL_HOST", "db"),
        "PORT": os.environ.get("MYSQL_PORT", "3306"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

STATIC_URL = "static/"
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "[{asctime}] {levelname:8} {name:20} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname:8} {message}",
            "style": "{",
        },
    },
    "handlers": {
        # –æ–±—â–∏–π –ª–æ–≥ –¥–ª—è –≤—Å–µ–≥–æ (INFO+)
        "general_file": {
            "class": "logging.FileHandler",
            "filename": BASE_DIR / "logs" / "general.log",
            "formatter": "verbose",
            "encoding": "utf-8",
        },
        # –ª–æ–≥ –¥–ª—è –Ω–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è parcels (DEBUG+)
        "parcels_file": {
            "class": "logging.FileHandler",
            "filename": BASE_DIR / "logs" / "parcels.log",
            "formatter": "verbose",
            "encoding": "utf-8",
        },
        # –ª–æ–≥ –¥–ª—è Celery (INFO+)
        "celery_file": {
            "class": "logging.FileHandler",
            "filename": BASE_DIR / "logs" / "celery.log",
            "formatter": "verbose",
            "encoding": "utf-8",
        },
        # –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "simple",
            "stream": sys.stdout,
        },
    },
    "loggers": {
        # –∫–æ—Ä–Ω–µ–≤–æ–π –ª–æ–≥–≥–µ—Ä –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –≤ general –∏ –≤ –∫–æ–Ω—Å–æ–ª—å
        "": {
            "handlers": ["console", "general_file"],
            "level": "INFO",
        },
        # –ª–æ–≥–≥–µ—Ä –¥–ª—è –ø–∞—Ä—Å–µ–ª–æ–≤ ‚Äî DEBUG –∏ –≤—ã—à–µ –≤ parcels.log
        "parcels": {
            "handlers": ["parcels_file"],
            "level": "DEBUG",
            "propagate": False,
        },
        # –ª–æ–≥–≥–µ—Ä –¥–ª—è Celery ‚Äî INFO –∏ –≤—ã—à–µ –≤ celery.log
        "celery": {
            "handlers": ["celery_file"],
            "level": "INFO",
            "propagate": False,
        },
    },
}
